{
    "sourceFile": "lib/core/utils/validator.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1756057115148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756057124549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,4 @@\n-import 'package:easy_localization/easy_localization.dart';\r\n-import '../../generated/locale_keys.g.dart';\r\n-import '../constants/app_values.dart';\r\n \r\n class Validator {\r\n   Validator._();\r\n \r\n"
                },
                {
                    "date": 1756057153296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n+    } else if (val.trim().isEmpty) {\r\n+      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756057970574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (val.trim().isEmpty) {\r\n+      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756057976645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (val.trim().isEmpty) {\r\n+      return \"Email can't be empty.\"\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756058009532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (val.trim().isEmpty) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return LocaleKeys..tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756058032660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n       return \"Email can't be empty.\";\r\n     } else if (val.trim().isEmpty) {\r\n       return \"Email can't be empty.\";\r\n     } else if (emailRegex.hasMatch(val) == false) {\r\n-      return LocaleKeys..tr();\r\n+      return \"Please enter a valid email address , e.g. email@domain.\",\r\n     } else {\r\n       return null;\r\n     }\r\n   }\r\n@@ -50,235 +50,4 @@\n     }\r\n   }\r\n \r\n }\r\n-\r\n-import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n-\r\n-class Validator {\r\n-  Validator._();\r\n-\r\n-  static String? validateEmail(String? val) {\r\n-    final RegExp emailRegex = RegExp(\r\n-      AppValues.emailRegex,\r\n-    );\r\n-    if (val == null) {\r\n-      return \"Email can't be empty.\";\r\n-    } else if (val.trim().isEmpty) {\r\n-      return \"Email can't be empty.\"\r\n-    } else if (emailRegex.hasMatch(val) == false) {\r\n-      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validatePassword(String? val) {\r\n-    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (!passwordRegex.hasMatch(val)) {\r\n-      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateConfirmPassword(String? val, String? password) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val != password) {\r\n-      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateName(String? val) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-}\r\n-\r\n-import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n-\r\n-class Validator {\r\n-  Validator._();\r\n-\r\n-  static String? validateEmail(String? val) {\r\n-    final RegExp emailRegex = RegExp(\r\n-      AppValues.emailRegex,\r\n-    );\r\n-    if (val == null) {\r\n-      return \"Email can't be empty.\";\r\n-    } else if (val.trim().isEmpty) {\r\n-      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n-    } else if (emailRegex.hasMatch(val) == false) {\r\n-      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validatePassword(String? val) {\r\n-    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (!passwordRegex.hasMatch(val)) {\r\n-      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateConfirmPassword(String? val, String? password) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val != password) {\r\n-      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateName(String? val) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-}\r\n-\r\n-import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n-\r\n-class Validator {\r\n-  Validator._();\r\n-\r\n-  static String? validateEmail(String? val) {\r\n-    final RegExp emailRegex = RegExp(\r\n-      AppValues.emailRegex,\r\n-    );\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n-    } else if (val.trim().isEmpty) {\r\n-      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n-    } else if (emailRegex.hasMatch(val) == false) {\r\n-      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validatePassword(String? val) {\r\n-    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (!passwordRegex.hasMatch(val)) {\r\n-      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateConfirmPassword(String? val, String? password) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val != password) {\r\n-      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateName(String? val) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-}\r\n-\r\n-class Validator {\r\n-  Validator._();\r\n-\r\n-  static String? validateEmail(String? val) {\r\n-    final RegExp emailRegex = RegExp(\r\n-      AppValues.emailRegex,\r\n-    );\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n-    } else if (val.trim().isEmpty) {\r\n-      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n-    } else if (emailRegex.hasMatch(val) == false) {\r\n-      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validatePassword(String? val) {\r\n-    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (!passwordRegex.hasMatch(val)) {\r\n-      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateConfirmPassword(String? val, String? password) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n-    } else if (val != password) {\r\n-      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateName(String? val) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validatePhoneNumber(String? val) {\r\n-    if (val == null) {\r\n-      return LocaleKeys.Error_PhoneNumberCannotBeEmpty.tr();\r\n-    } else if (int.tryParse(val.trim()) == null) {\r\n-      return LocaleKeys.Error_InvalidPhoneNumber.tr();\r\n-    } else if (val.trim().length != 11) {\r\n-      return LocaleKeys.Error_InvalidPhoneNumber.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  static String? validateCode(String? val) {\r\n-    if (val == null || val.isEmpty) {\r\n-      return LocaleKeys.Error_CodeCannotBeEmpty.tr();\r\n-    } else if (val.length < 6) {\r\n-      return LocaleKeys.Error_CodeShouldBeAtLeast6Digits.tr();\r\n-    } else {\r\n-      return null;\r\n-    }\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1756058051251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (val.trim().isEmpty) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return \"Please enter a valid email address\";\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756058062224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (val.trim().isEmpty) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return \"Please enter a valid email address\";\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return \r\n+    } else if (val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756058077304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+\r\n+import 'package:ecommerce_elk/core/constant/app_values.dart';\r\n+\r\n+class Validator {\r\n+  Validator._();\r\n+\r\n+  static String? validateEmail(String? val) {\r\n+    final RegExp emailRegex = RegExp(\r\n+      AppValues.emailRegex,\r\n+    );\r\n+    if (val == null) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (val.trim().isEmpty) {\r\n+      return \"Email can't be empty.\";\r\n+    } else if (emailRegex.hasMatch(val) == false) {\r\n+      return \"Please enter a valid email address\";\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validatePassword(String? val) {\r\n+    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n+    if (val == null) {\r\n+      return \r\n+    } else if (val.isEmpty) {\r\n+      return \"Password can't be empty.\";\r\n+    } else if (!passwordRegex.hasMatch(val)) {\r\n+      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateConfirmPassword(String? val, String? password) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n+    } else if (val != password) {\r\n+      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+  static String? validateName(String? val) {\r\n+    if (val == null || val.isEmpty) {\r\n+      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n+    } else {\r\n+      return null;\r\n+    }\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1756058144445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n       return \"Password can't be empty.\";\r\n     } else if (val.isEmpty) {\r\n       return \"Password can't be empty.\";\r\n     } else if (!passwordRegex.hasMatch(val)) {\r\n-      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n+      return PasswordEnterAValidPassword\r\n     } else {\r\n       return null;\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1756058158158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n       return \"Password can't be empty.\";\r\n     } else if (val.isEmpty) {\r\n       return \"Password can't be empty.\";\r\n     } else if (!passwordRegex.hasMatch(val)) {\r\n-      return PasswordEnterAValidPassword\r\n+      return \"\"\r\n     } else {\r\n       return null;\r\n     }\r\n   }\r\n"
                }
            ],
            "date": 1756057115148,
            "name": "Commit-0",
            "content": "import 'package:easy_localization/easy_localization.dart';\r\nimport '../../generated/locale_keys.g.dart';\r\nimport '../constants/app_values.dart';\r\n\r\nclass Validator {\r\n  Validator._();\r\n\r\n  static String? validateEmail(String? val) {\r\n    final RegExp emailRegex = RegExp(\r\n      AppValues.emailRegex,\r\n    );\r\n    if (val == null) {\r\n      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n    } else if (val.trim().isEmpty) {\r\n      return LocaleKeys.Error_EmailCannotBeEmpty.tr();\r\n    } else if (emailRegex.hasMatch(val) == false) {\r\n      return LocaleKeys.Error_EnterAValidEmail.tr();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static String? validatePassword(String? val) {\r\n    final RegExp passwordRegex = RegExp(AppValues.passwordRegex);\r\n    if (val == null) {\r\n      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n    } else if (val.isEmpty) {\r\n      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n    } else if (!passwordRegex.hasMatch(val)) {\r\n      return LocaleKeys.Error_PasswordEnterAValidPassword.tr();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static String? validateConfirmPassword(String? val, String? password) {\r\n    if (val == null || val.isEmpty) {\r\n      return LocaleKeys.Error_PasswordCannotBeEmpty.tr();\r\n    } else if (val != password) {\r\n      return LocaleKeys.Error_ConfirmPasswordMustMatch.tr();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static String? validateName(String? val) {\r\n    if (val == null || val.isEmpty) {\r\n      return LocaleKeys.Error_NameCannotBeEmpty.tr();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static String? validatePhoneNumber(String? val) {\r\n    if (val == null) {\r\n      return LocaleKeys.Error_PhoneNumberCannotBeEmpty.tr();\r\n    } else if (int.tryParse(val.trim()) == null) {\r\n      return LocaleKeys.Error_InvalidPhoneNumber.tr();\r\n    } else if (val.trim().length != 11) {\r\n      return LocaleKeys.Error_InvalidPhoneNumber.tr();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static String? validateCode(String? val) {\r\n    if (val == null || val.isEmpty) {\r\n      return LocaleKeys.Error_CodeCannotBeEmpty.tr();\r\n    } else if (val.length < 6) {\r\n      return LocaleKeys.Error_CodeShouldBeAtLeast6Digits.tr();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}